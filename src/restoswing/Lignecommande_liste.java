/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package restoswing;

import java.net.URI;
import java.net.http.HttpClient;
import java.net.http.HttpRequest;
import java.net.http.HttpResponse;
import java.util.ArrayList;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author FM504305
 */
public class Lignecommande_liste extends javax.swing.JDialog {

       Commande commande; // Région sélectionnée et transmise par la fenêtre region_liste
    ArrayList<LigneCommande> ligne_commandes; // collection des départements de la région
    String url; // URL de l'API
    String reponse_json; // Réponse en JSON de l'API
    int i = 0; // Indice sur les départements

    /**
     * Creates new form departement_liste
     */
    public Lignecommande_liste(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        get_data();
        
    }

    public Lignecommande_liste(java.awt.Frame parent, boolean modal, Commande commande) {
        super(parent, modal);
        this.commande = commande; // Récupère la commande en cours
        initComponents();
         get_data();
    }

    // Récupère la commande et remplit les ligne_commandes
    public void get_data() {

        // Récupère les ligne_commandes de la commandes
        this.ligne_commandes = this.commande.getLigne_Commande();

        // Construit le tableau de données à partir de la collection
        Object[][] data = new Object[ligne_commandes.size()][3];

        // for pour afficher les donnée dans le tableau
        for (i = 0; i < ligne_commandes.size(); i++) {
            data[i][0] = ligne_commandes.get(i).getId_ligne();
            data[i][1] = ligne_commandes.get(i).getLibelle();
            data[i][2] = ligne_commandes.get(i).getQauntite_ligne();
        } // for

        // Construit le tableau des entêtes
        String[] cols = {"ID", "libellé","quantité"};

        // Construit le modèle
        DefaultTableModel model_ligneCommande = new DefaultTableModel(data, cols);

        // Met à jour le modèle dans le JTable
        jTable1.setModel(model_ligneCommande);

        // Met à jour l'id la date et le pseudo
        ID_utilisateur.setText(String.valueOf(commande.getIdcommande()));
        date_commande.setText(commande.getDate());
        pseudo_utilisateur.setText(commande.getPseudo());
        

    }

    
    /**
     * Creates new form Detail_commande
     */
    /*
    public Lignecommande_liste(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }*/

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        bouton_accepter = new javax.swing.JButton();
        button_refuser = new javax.swing.JButton();
        bouton_pret = new javax.swing.JButton();
        ID_utilisateur = new javax.swing.JLabel();
        date_commande = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        pseudo_utilisateur = new javax.swing.JLabel();
        jButton4 = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("detail d'une commande");

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 36)); // NOI18N
        jLabel1.setText("Restoswing");

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "ID", "Plat", "Quantité"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        bouton_accepter.setText("Accepter");
        bouton_accepter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bouton_accepterActionPerformed(evt);
            }
        });

        button_refuser.setText("Refuser");
        button_refuser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_refuserActionPerformed(evt);
            }
        });

        bouton_pret.setText("Prête");
        bouton_pret.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bouton_pretActionPerformed(evt);
            }
        });

        ID_utilisateur.setText("???");

        date_commande.setText("???");

        pseudo_utilisateur.setText("???");

        jButton4.setText("revenir");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jLabel6.setText("Détails d'une commande");

        jLabel7.setText("ID_commande:");

        jLabel8.setText("date:");

        jLabel9.setText("Login:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(53, 53, 53)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel8)
                            .addComponent(jLabel9)
                            .addComponent(jLabel7))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(ID_utilisateur)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(pseudo_utilisateur)
                                .addGap(45, 45, 45)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(171, 171, 171)
                                        .addComponent(jLabel1))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(191, 191, 191)
                                        .addComponent(jLabel6))))
                            .addComponent(date_commande)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(410, 410, 410)
                        .addComponent(jButton4)))
                .addContainerGap(322, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(button_refuser)
                    .addComponent(bouton_pret)
                    .addComponent(bouton_accepter))
                .addGap(117, 117, 117))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(141, 141, 141)
                        .addComponent(jLabel4))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(64, 64, 64)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(ID_utilisateur)
                            .addComponent(jLabel7))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel9)
                                .addComponent(pseudo_utilisateur))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel8)
                                    .addComponent(date_commande))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel6)))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(bouton_accepter)
                        .addGap(35, 35, 35)
                        .addComponent(button_refuser)
                        .addGap(34, 34, 34)
                        .addComponent(bouton_pret))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(62, 62, 62)
                .addComponent(jButton4)
                .addContainerGap(93, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void bouton_pretActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bouton_pretActionPerformed
        // TODO add your handling code here:
        // Lance une requête REST pour mettre la région en Outre-Mer
        url = Commande_liste.API_URL + "/commande_terminer.php?id_commande=" + commande.getIdcommande();
        //System.out.println("url="+url);
        // Créer un HttpClient
        HttpClient client = HttpClient.newHttpClient();
        // Crée une requête HTTP GET
        try {
            // Construit l'URL de la requête
            HttpRequest request = HttpRequest.newBuilder()
                    .uri(new URI(url))
                    .build();
            // Envoie la requête et attend la réponse
            HttpResponse<String> response = client.send(request, HttpResponse.BodyHandlers.ofString());
            // Vérifie que la réponse est normale
            if (response.statusCode() == 200) {
                reponse_json = response.body();
            } else {
                System.err.println("Erreur : Code statut " + response.statusCode());
            }

        } catch (Exception ex) {
            System.err.println("Erreur : " + ex.getMessage());
            //ex.printStackTrace();
        }
        //System.out.println(json);

    }//GEN-LAST:event_bouton_pretActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        dispose();
    }//GEN-LAST:event_jButton4ActionPerformed

    private void bouton_accepterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bouton_accepterActionPerformed
        // TODO add your handling code here:
        // Lance une requête REST pour mettre la région en Outre-Mer
        url = Commande_liste.API_URL + "/commande_accepter.php?id_commande=" + commande.getIdcommande();
        //System.out.println("url="+url);
        // Créer un HttpClient
        HttpClient client = HttpClient.newHttpClient();
        // Crée une requête HTTP GET
        try {
            // Construit l'URL de la requête
            HttpRequest request = HttpRequest.newBuilder()
                    .uri(new URI(url))
                    .build();
            // Envoie la requête et attend la réponse
            HttpResponse<String> response = client.send(request, HttpResponse.BodyHandlers.ofString());
            // Vérifie que la réponse est normale
            if (response.statusCode() == 200) {
                reponse_json = response.body();
            } else {
                System.err.println("Erreur : Code statut " + response.statusCode());
            }

        } catch (Exception ex) {
            System.err.println("Erreur : " + ex.getMessage());
            //ex.printStackTrace();
        }
        //System.out.println(json);
    }//GEN-LAST:event_bouton_accepterActionPerformed

    private void button_refuserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_refuserActionPerformed
        // TODO add your handling code here:
        // Lance une requête REST pour mettre la région en Outre-Mer
        url = Commande_liste.API_URL + "/commande_refuser.php?id_commande=" + commande.getIdcommande();
        //System.out.println("url="+url);
        // Créer un HttpClient
        HttpClient client = HttpClient.newHttpClient();
        // Crée une requête HTTP GET
        try {
            // Construit l'URL de la requête
            HttpRequest request = HttpRequest.newBuilder()
                    .uri(new URI(url))
                    .build();
            // Envoie la requête et attend la réponse
            HttpResponse<String> response = client.send(request, HttpResponse.BodyHandlers.ofString());
            // Vérifie que la réponse est normale
            if (response.statusCode() == 200) {
                reponse_json = response.body();
            } else {
                System.err.println("Erreur : Code statut " + response.statusCode());
            }

        } catch (Exception ex) {
            System.err.println("Erreur : " + ex.getMessage());
            //ex.printStackTrace();
        }
        //System.out.println(json);
    }//GEN-LAST:event_button_refuserActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Lignecommande_liste.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Lignecommande_liste.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Lignecommande_liste.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Lignecommande_liste.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                Lignecommande_liste dialog = new Lignecommande_liste(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel ID_utilisateur;
    private javax.swing.JButton bouton_accepter;
    private javax.swing.JButton bouton_pret;
    private javax.swing.JButton button_refuser;
    private javax.swing.JLabel date_commande;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JLabel pseudo_utilisateur;
    // End of variables declaration//GEN-END:variables
}
